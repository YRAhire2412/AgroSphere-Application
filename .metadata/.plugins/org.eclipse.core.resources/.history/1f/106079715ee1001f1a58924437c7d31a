package com.agro.pojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import org.hibernate.annotations.UpdateTimestamp;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Getter
@Setter
@ToString(callSuper = true)
@AllArgsConstructor
@NoArgsConstructor
public class Market {
	 @Id
	    @GeneratedValue(strategy = GenerationType.IDENTITY)
	    private Long marketId;

	    private String marketName;
	    private String address;
	    private String city;
	    private String district;
	    private String state;

	    @OneToMany
	    @JoinColumn(name = "market_id") // Foreign key in Products table
	    private List<Products> products;

	    @OneToMany
	    @JoinColumn(name = "market_id") // Foreign key in Appointments table
	    private List<Appointment> appointments;

	    @OneToMany
	    @JoinColumn(name = "market_id") // Foreign key in MarketRate table
	    private List<MarketRate> marketRates;
	}
	MarketRate Entity:
	Similarly, the MarketRate entity maintains a unidirectional relationship to Products and Market.

	java
	Copy
	@Entity
	@Table(name = "market_rate")
	@Getter
	@Setter
	@ToString(callSuper = true)
	@AllArgsConstructor
	@NoArgsConstructor
	public class MarketRate {

	    @Id
	    @GeneratedValue(strategy = GenerationType.IDENTITY)
	    private Long rateId;

	    private String productName;
	    private BigDecimal rate;

	    @UpdateTimestamp
	    private LocalDateTime lastUpdated;

	    @ManyToOne
	    @JoinColumn(name = "product_id") // Foreign key to Products
	    private Products product;

	    @ManyToOne
	    @JoinColumn(name = "market_id") // Foreign key to Market
	    private Market market;

}
